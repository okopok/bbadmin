SystemBundle\Entity\User:
    type: entity
    table: users
    id:
        id:
            type: integer
            id: true
            generator:
                strategy: AUTO
    fields:
        name:
            type: string
            length: 255
        username:
            type: string
            length: 255
            unique: true
        password:
            type: string
            length: 255
        description:
            type: text
        isActive:
            type: boolean
            column: is_active
#        ldapUserId:
#            type: integer
#            column: ldap_user_id
        created:
            type: datetime
            options:
                comment: Created time
        updated:
            type: datetime
            options:
                comment: Updated time
    oneToOne:
        ldap_user:
            targetEntity: \LDAPBundle\Entity\Users
            joinColumn:
                name: ldap_user_id
                referencedColumnName: id
    lifecycleCallbacks: {  }


#type: entity
#  repositoryClass: Doctrine\Tests\ORM\Mapping\UserRepository
#  table: cms_users
#  schema: schema_name # The schema the table lies in, for platforms that support schemas (Optional, >= 2.5)
#  readOnly: true
#  indexes:
#    name_index:
#      columns: [ name ]
#  id:
#    id:
#      type: integer
#      generator:
#        strategy: AUTO
#  fields:
#    name:
#      type: string
#      length: 50
#    email:
#      type: string
#      length: 32
#      column: user_email
#      unique: true
#      options:
#        fixed: true
#        comment: User's email address
#    loginCount:
#      type: integer
#      column: login_count
#      nullable: false
#      options:
#        unsigned: true
#        default: 0
#  oneToOne:
#    address:
#      targetEntity: Address
#      joinColumn:
#        name: address_id
#        referencedColumnName: id
#        onDelete: CASCADE
#  oneToMany:
#    phonenumbers:
#      targetEntity: Phonenumber
#      mappedBy: user
#      cascade: ["persist", "merge"]
#  manyToMany:
#    groups:
#      targetEntity: Group
#      joinTable:
#        name: cms_users_groups
#        joinColumns:
#          user_id:
#            referencedColumnName: id
#        inverseJoinColumns:
#          group_id:
#            referencedColumnName: id
#  lifecycleCallbacks:
#    prePersist: [ doStuffOnPrePersist, doOtherStuffOnPrePersistToo ]
#    postPersist: [ doStuffOnPostPersist ]